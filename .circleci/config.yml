version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2 

jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.3-stretch-node
        environment:
          PG_HOST: localhost
          PG_USER: postgres
          RAILS_ENV: test
          RACK_ENV: test

      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: postgres

    parallelism: 1
    working_directory: ~/demo-rc-app

    steps:
      - checkout
      - run:
          name: install depencies
          command: |
            sudo gem update --system
            gem install bundler:2.1.4
            bundle install --jobs=4 --retry=3 --path demo-rc-app/bundle

      - run: sudo apt install -y postgresql-client || true

      - save_cache:
          paths:
            - ./demo-rc-app/bundle
          key: demo-rc-app-v1-dependencies-{{ checksum "Gemfile.lock" }}
      
      - run: 
            name: Set up DB
            command: |
              bundle exec rake db:create db:schema:load --trace
              bundle exec rake db:migrate
            environment:
              DATABASE_URL: "postgres://postgres@localhost:5432/rails-api-test"

      - run:
          name: Parallel RSpec
          command: bin/rails test

      # Save artifacts
      - run:
          name: Parallel RSpec
          command: |
            echo "my artifact file" > /tmp/artifact-1;
            mkdir /tmp/artifacts;
            bin/rails test;

      - store_artifacts:
          path: /tmp/artifact-1
          destination: artifact-file

      - store_artifacts:
          path: /tmp/artifacts

  deploy-production:
      docker:
        - image: circleci/ruby:2.6.3-stretch-node
          environment:
            RAILS_ENV: prodution
            BUNDLER_VERSION: 2.1.4

      working_directory: ~/repo
      steps:
        - checkout
        - run:
            name: install dependencies
            command: |
              sudo gem update --system
              bundle install --jobs=4 --retry=3 --path demo-rc-app/bundle

        - run:
            name: Deploy to Production server from master branch
            command: bundle exec cap production deploy

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy-production:
          requires:
            - build
          filters:
            branches:
              only: master
