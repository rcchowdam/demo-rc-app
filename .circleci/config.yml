version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2 

jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.3-stretch-node
        environment:
          PG_HOST: localhost
          PG_USER: postgres
          RAILS_ENV: test
          RACK_ENV: test

      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: postgres

    parallelism: 1
    working_directory: ~/demo-rc-app

    steps:
      - checkout
      - run:
          name: install depencies
          command: |
            sudo gem update --system
            gem install bundler:2.1.4
            bundle install --jobs=4 --retry=3 --path demo-rc-app/bundle

      - run: sudo apt install -y postgresql-client || true
      
      - run:
          name: setup code climate test reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            
      - save_cache:
          paths:
            - ./demo-rc-app/bundle
          key: demo-rc-app-v1-dependencies-{{ checksum "Gemfile.lock" }}
      
      # run tests!
      - run:
          name: run tests
          command: |
            ./cc-test-reporter before-build
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES
      #            ./cc-test-reporter after-build --exit-code $?

      - run:
          name: Code Climate Test Coverage
          command: |
            ./cc-test-reporter format-coverage -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"
      - persist_to_workspace:
          root: coverage
          paths:
            - codeclimate.*.json
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  upload-coverage:
    environment:
      CC_TEST_REPORTER_ID: 'd8744bbbdcfe1659dd79e082fe93e3c23d37b4dc20253ba4eb4941f97e6db6d8'
    docker:
      - image: circleci/ruby:2.5.1
    working_directory: ~/mind-api

    steps:
      - attach_workspace:
          at: /tmp/coverage
      - run:
          name: setup code climate test reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          command: |
            ./cc-test-reporter sum-coverage --output - /tmp/coverage/codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - upload-coverage:
          requires:
            - build
      # - deploy-production:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only: master
